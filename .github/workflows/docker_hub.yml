name: DockerHub
on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/docker_hub.yml'
      - '.github/workflows/validate.yml'
      - '**/Dockerfile'
      - '.github/matrix.json'
  schedule:
    - cron: 0 15 * * 6
  workflow_dispatch:
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true
env:
  DOCKER_USER: 41772ki
  DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  DOCKER_REPO: swift-mint
jobs:
  generate-matrix:
    name: Generate matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - name: Set matrix
        id: set-matrix
        run: |
          matrix=$(cat .github/matrix.json | jq -c .)
          echo "::set-output name=matrix::$matrix"

  build:
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Fetch Mint revision installed in current Docker image
        if: ${{ github.event_name != 'workflow_dispatch' }}
        id: mint-revision
        run: |
          MINT_REVISION=$(docker run -t ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPO }}:${{ matrix.swift_version }} cat /.mint_revision)
          echo "::set-output name=value::$MINT_REVISION"
      - name: Create tags for push
        id: create-tags
        run: |
            LATEST_VERSION="${{ fromJson(needs.generate-matrix.outputs.matrix).swift_version[0] }}"
            SWIFT_VERSION=${{ matrix.swift_version }} BASE_IMAGE=$(eval "echo \"$(cat Dockerfile | grep FROM | awk '{ print $NF }')\"")
            docker pull $BASE_IMAGE
            SWIFT_VERSION=$(docker run --entrypoint swift "$BASE_IMAGE" --version | grep 'Swift version' | awk '{ print $NF }' | sed 's/[^0-9.]*\([0-9.]*\).*/\1/')
            SWIFT_VERSION_MAJOR_MINOR=$(echo $SWIFT_VERSION | sed -E 's/([0-9]*)\.([0-9]*)(\.([0-9]*))?/\1.\2/g')
            SWIFT_VERSION_MAJOR=$(echo $SWIFT_VERSION | sed -E 's/([0-9]*)\.([0-9]*)(\.([0-9]*))?/\1/g')
            TAGS="[\"$SWIFT_VERSION\", \"$SWIFT_VERSION_MAJOR_MINOR\",\"$SWIFT_VERSION_MAJOR\"]"
            if [[ "${{ matrix.swift_version }}" = "$LATEST_VERSION" ]]; then
              TAGS=$(echo "$TAGS" | jq -c '. += ["latest"]')
            else
              TAGS=$(echo "$TAGS" | jq -c '. | del(.[2])')
            fi
            TAGS=$(echo "$TAGS" | jq -r '. | unique | map("${{ env.DOCKER_USER }}/${{ env.DOCKER_REPO }}:" + .) | join(",")')
            echo "::set-output name=tags::$TAGS"
      - name: Build Docker image
        id: build-image
        uses: docker/build-push-action@v3
        with:
          push: false
          load: true
          tags: ${{ steps.create-tags.outputs.tags }}
          build-args: |
            SWIFT_VERSION=${{ matrix.swift_version }}
            MINT_REVISION=${{ matrix.mint_revision }}
      - name: Verify Mint revision to check if it needs to update image
        if: ${{ github.event_name != 'workflow_dispatch' }}
        id: needs-update
        run: |
          IMAGE_ID="$(echo ${{ steps.build-image.outputs.imageid }} | sed -r 's/:/ /g' | awk '{ print $NF }')"
          BUILT_MINT_REVISION="$(docker run -t "${IMAGE_ID}" cat /.mint_revision | tr -d '\n')"
          CURRENT_MINT_REVISION="$(echo ${{ steps.mint-revision.outputs.value }} | tr -d '\n')"
          # echo "${BUILT_MINT_REVISION::8}"
          # echo "${CURRENT_MINT_REVISION::8}"
          if [ "${BUILT_MINT_REVISION::8}" = "${CURRENT_MINT_REVISION::8}" ]; then
            echo 'update not required. should skip.'
            echo "::set-output name=value::false"
          else
            echo 'update required.'
            echo "::set-output name=value::true"
          fi
      - name: Push image to DockerHub
        if: ${{ github.event_name == 'workflow_dispatch' || steps.needs-update.outputs.value == 'true' }}
        uses: docker/build-push-action@v3
        with:
          platforms: ${{ (matrix.swift_version >= 5.6 && 'linux/amd64,linux/arm64') || 'linux/amd64' }}
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.create-tags.outputs.tags }}
          build-args: |
            SWIFT_VERSION=${{ matrix.swift_version }}
            MINT_REVISION=${{ matrix.mint_revision }}
