name: DockerHub
on:
  push:
    # branches: [main]
    paths:
      - '.github/workflows/docker_hub.yml'
      - '.github/workflows/validate.yml'
      - '**/Dockerfile'
      - '.github/matrix.json'
  schedule:
    - cron: 0 15 * * 6
  workflow_dispatch:
env:
  DOCKER_USER: 41772ki
  DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
  DOCKER_REPO: swift-mint
jobs:
  generate-matrix:
    name: Generate matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          matrix=$(cat .github/matrix.json | jq -c .)
          echo "::set-output name=matrix::$matrix"
  build:
    needs: generate-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASS }}
    - name: Fetch Mint revision installed in current Docker image
      id: mint-revision
      run: |
        MINT_REVISION=$(docker run -t ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPO }}:${{ matrix.swift_version }} cat /.mint_revision)
        echo "::set-output name=value::$MINT_REVISION"
    - name: Create tags for push
      id: create-tags
      run: |
        if [ "${{ matrix.swift_version }}" == 'latest' ]; then
          SWIFT_VERSION=latest BASE_IMAGE=$(eval "echo \"$(cat Dockerfile | grep FROM | awk '{ print $NF }')\"")
          docker pull $BASE_IMAGE
          SWIFT_VERSION=$(docker run --entrypoint swift "$BASE_IMAGE" --version | grep 'Swift version' | awk '{ print $NF }' | sed 's/[^0-9.]*\([0-9.]*\).*/\1/')
          SWIFT_VERSION_MAJOR_MINOR=$(echo $SWIFT_VERSION | sed -E 's/([0-9]*)\.([0-9]*)(\.([0-9]*))?/\1.\2/g')
          SWIFT_VERSION_MAJOR=$(echo $SWIFT_VERSION | sed -E 's/([0-9]*)\.([0-9]*)(\.([0-9]*))?/\1/g')
          TAGS=$(echo "[\"latest\", \"$SWIFT_VERSION\", \"$SWIFT_VERSION_MAJOR_MINOR\",\"$SWIFT_VERSION_MAJOR\"]" | jq -r '. | unique | map("${{ env.DOCKER_USER }}/${{ env.DOCKER_REPO }}:" + .) | join(",")')
          echo "::set-output name=tags::$TAGS"
        else
          echo "::set-output name=tags::${{ env.DOCKER_USER }}/${{ env.DOCKER_REPO }}:${{ matrix.swift_version }}"
        fi
    - name: Build Docker image
      uses: docker/build-push-action@v2
      with: 
        push: false
        load: true
        tags: ${{ steps.create-tags.outputs.tags }}
        build-args: |
          SWIFT_VERSION=${{ matrix.swift_version }}
          MINT_REVISION=${{ matrix.mint_revision }}
    - name: Verify Mint revision
      run: |
        echo $(docker run -t "${{ steps.create-tags.outputs.tags }}" cat /.mint_revision)
        echo ${{ steps.mint-revision.outputs.value }}
